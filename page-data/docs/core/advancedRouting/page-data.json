{
    "componentChunkName": "component---node-modules-smooth-doc-src-templates-doc-js",
    "path": "/docs/core/advancedRouting/",
    "result": {"data":{"mdx":{"fields":{"pageType":"doc","title":"Advanced Routing","editLink":""},"body":"var _excluded = [\"components\"];\n\nfunction _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar _frontmatter = {\n  \"title\": \"Advanced Routing\",\n  \"section\": \"UNDERSTANDING THE CORE\",\n  \"order\": 5\n};\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"h1\", {\n    \"id\": \"advanced-routing\"\n  }, mdx(\"a\", {\n    parentName: \"h1\",\n    \"href\": \"#advanced-routing\",\n    \"aria-hidden\": true,\n    \"className\": \"anchor\"\n  }, mdx(\"svg\", {\n    \"aria-hidden\": \"true\",\n    height: \"16\",\n    version: \"1.1\",\n    viewBox: \"0 0 16 16\",\n    width: \"16\"\n  }, mdx(\"path\", {\n    fillRule: \"evenodd\",\n    d: \"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\n  }))), \"Advanced Routing\"), mdx(\"h2\", {\n    \"id\": \"resolving-actions\"\n  }, mdx(\"a\", {\n    parentName: \"h2\",\n    \"href\": \"#resolving-actions\",\n    \"aria-hidden\": true,\n    \"className\": \"anchor\"\n  }, mdx(\"svg\", {\n    \"aria-hidden\": \"true\",\n    height: \"16\",\n    version: \"1.1\",\n    viewBox: \"0 0 16 16\",\n    width: \"16\"\n  }, mdx(\"path\", {\n    fillRule: \"evenodd\",\n    d: \"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\n  }))), \"Resolving actions\"), mdx(\"p\", null, \"Text is always treated as action, so these two routes are matched same, when the \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"/cat\"), \" action is issued.\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-javascript\"\n  }, \"const { Router } = require('wingbot');\\nconst bot = new Router();\\n\\nbot.use(req => req.action() === '/cat', (req, res) => {\\n    res.text('Matched!');\\n});\\n\\nbot.use('/cat', (req, res) => { res.text('Matched!'); });\\n\\nmodule.exports = bot;\\n\")), mdx(\"blockquote\", null, mdx(\"p\", {\n    parentName: \"blockquote\"\n  }, \"Actual path resolver also takes into account the fact, that routers can be nested.\")), mdx(\"h2\", {\n    \"id\": \"simple-text-actions\"\n  }, mdx(\"a\", {\n    parentName: \"h2\",\n    \"href\": \"#simple-text-actions\",\n    \"aria-hidden\": true,\n    \"className\": \"anchor\"\n  }, mdx(\"svg\", {\n    \"aria-hidden\": \"true\",\n    height: \"16\",\n    version: \"1.1\",\n    viewBox: \"0 0 16 16\",\n    width: \"16\"\n  }, mdx(\"path\", {\n    fillRule: \"evenodd\",\n    d: \"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\n  }))), \"Simple text actions\"), mdx(\"p\", null, \"It's possible to use reqular expression to match the specific text input. Without any AI tool.\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-javascript\"\n  }, \"const { Router } = require('wingbot');\\nconst bot = new Router();\\n\\nbot.use(/h[ea]llo|hallo|ciao/, (req, res) => {\\n    res.text('Matched:')\\n        .text(req.text(true)); // echoes normalized text\\n});\\n\\nbot.use((req, res) => { res.text('Not matched'); });\\n\\nmodule.exports = bot;\\n\")), mdx(\"p\", null, \"And the code works like this. It matches lot of words, because the regular expression\\ndoes not match whole words:\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\"\n  }, \"*-----------------------------------*\\n|                             Hello |\\n| Matched:                          |\\n| hello                             |\\n|                                   |\\n|                      Hello robot! |\\n| Matched:                          |\\n| hello-robot                       |\\n|                                   |\\n|                         Hi! \\u010Cia\\xF3! |\\n| Matched:                          |\\n| hi-ciao                           |\\n|                                   |\\n|                           HiHello |\\n| hihello                           |\\n*-----------------------------------*\\n\")), mdx(\"h2\", {\n    \"id\": \"integrating-with-ai-prediction\"\n  }, mdx(\"a\", {\n    parentName: \"h2\",\n    \"href\": \"#integrating-with-ai-prediction\",\n    \"aria-hidden\": true,\n    \"className\": \"anchor\"\n  }, mdx(\"svg\", {\n    \"aria-hidden\": \"true\",\n    height: \"16\",\n    version: \"1.1\",\n    viewBox: \"0 0 16 16\",\n    width: \"16\"\n  }, mdx(\"path\", {\n    fillRule: \"evenodd\",\n    d: \"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\n  }))), \"Integrating with AI prediction\"), mdx(\"p\", null, \"It's ofcourse possible to make integration with 3rd party service. Function should return a boolean, where \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"true === CONTINUE\"), \" and \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"false === BREAK\"), \".\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-javascript\"\n  }, \"const { Router } = require('wingbot');\\nconst keyworder = require('keyworder');\\nconst bot = new Router();\\n\\nbot.use((req) => {\\n    if (req.action()) {\\n        // skip events with specific action (postback, quick reply, ref...)\\n        return false;\\n    }\\n    return keyworder.resolve(req.text())\\n        .then(intents => intents\\n            .some(intent => intent.tag === 'greeting' && intent.score > 0.95)\\n        );\\n\\n}, (req, res) => {\\n    res.text('Matched:');\\n});\\n\\nmodule.exports = bot;\\n\")), mdx(\"h2\", {\n    \"id\": \"redirecting-flow-with-post-back\"\n  }, mdx(\"a\", {\n    parentName: \"h2\",\n    \"href\": \"#redirecting-flow-with-post-back\",\n    \"aria-hidden\": true,\n    \"className\": \"anchor\"\n  }, mdx(\"svg\", {\n    \"aria-hidden\": \"true\",\n    height: \"16\",\n    version: \"1.1\",\n    viewBox: \"0 0 16 16\",\n    width: \"16\"\n  }, mdx(\"path\", {\n    fillRule: \"evenodd\",\n    d: \"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\n  }))), \"Redirecting flow with Post Back\"), mdx(\"p\", null, \"Sometimes there is need to redirect the conversation flow. For these purposes,\\nthere is a \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"postBack(action: string, data: object?)\"), \" function.\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-javascript\"\n  }, \"const { Router } = require('wingbot');\\nconst bot = new Router();\\n\\nbot.use('world', (req, res) => {\\n    res.text('world');\\n});\\n\\nbot.use((req, res, postBack) => {\\n    res.text('Hello');\\n    postBack('world');\\n});\\n\\nmodule.exports = bot;\\n\")), mdx(\"p\", null, \"The result of postBack looks like this\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\"\n  }, \"*-----------------------------------*\\n|                       Let's start |\\n| hello                             |\\n| world                             |\\n*-----------------------------------*\\n\")), mdx(\"h2\", {\n    \"id\": \"or-conditions---addressable-text-microiteractions\"\n  }, mdx(\"a\", {\n    parentName: \"h2\",\n    \"href\": \"#or-conditions---addressable-text-microiteractions\",\n    \"aria-hidden\": true,\n    \"className\": \"anchor\"\n  }, mdx(\"svg\", {\n    \"aria-hidden\": \"true\",\n    height: \"16\",\n    version: \"1.1\",\n    viewBox: \"0 0 16 16\",\n    width: \"16\"\n  }, mdx(\"path\", {\n    fillRule: \"evenodd\",\n    d: \"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\n  }))), \"Or conditions - addressable text microiteractions\"), mdx(\"p\", null, \"Some microinteractions can be triggered by text and also by action, so why to separate them.\"), mdx(\"p\", null, mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"!addressable microiteractions has global scope\")), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-javascript\"\n  }, \"const bot = new Router();\\n\\nbot.use(['world', /^world-text$/], (req, res) => {\\n    res.text('world');\\n});\\n\\nbot.use((req, res, postBack) => {\\n    res.text('Hello', {\\n        world: 'quick reply'\\n    }).expected('./');\\n});\\n\\nmodule.exports = bot;\\n\")), mdx(\"p\", null, \"The result looks like this:\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\"\n  }, \"*-----------------------------------*\\n|                       Let's start |\\n| Hello                             |\\n|                             world |\\n| world                             |\\n*-----------------------------------*\\n\")), mdx(\"h2\", {\n    \"id\": \"handling-expected-text-messages\"\n  }, mdx(\"a\", {\n    parentName: \"h2\",\n    \"href\": \"#handling-expected-text-messages\",\n    \"aria-hidden\": true,\n    \"className\": \"anchor\"\n  }, mdx(\"svg\", {\n    \"aria-hidden\": \"true\",\n    height: \"16\",\n    version: \"1.1\",\n    viewBox: \"0 0 16 16\",\n    width: \"16\"\n  }, mdx(\"path\", {\n    fillRule: \"evenodd\",\n    d: \"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\n  }))), \"Handling expected text messages\"), mdx(\"p\", null, \"For clean code it's good to handle text for quick replies separately.\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-javascript\"\n  }, \"const bot = new Router();\\n\\nbot.use((req, res, postBack) => {\\n    res.text('Hello', {\\n        world: 'quick reply'\\n    }).expected('expectedRoute');\\n});\\n\\nbot.use('expectedRoute', /^foo$/, (req, res) => res.text('foooooo'));\\n\\nbot.use('expectedRoute', /^bar$/, (req, res) => res.text('barrrrr'));\\n\\nmodule.exports = bot;\\n\")), mdx(\"p\", null, \"The result looks like this:\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\"\n  }, \"*-----------------------------------*\\n|                       Let's start |\\n| Hello                             |\\n|                               bar |\\n| bar                               |\\n*-----------------------------------*\\n\")));\n}\n;\nMDXContent.isMDXComponent = true;","tableOfContents":{"items":[{"url":"#advanced-routing","title":"Advanced Routing","items":[{"url":"#resolving-actions","title":"Resolving actions"},{"url":"#simple-text-actions","title":"Simple text actions"},{"url":"#integrating-with-ai-prediction","title":"Integrating with AI prediction"},{"url":"#redirecting-flow-with-post-back","title":"Redirecting flow with Post Back"},{"url":"#or-conditions---addressable-text-microiteractions","title":"Or conditions - addressable text microiteractions"},{"url":"#handling-expected-text-messages","title":"Handling expected text messages"}]}]}}},"pageContext":{"id":"bbcba0f2-5419-5f80-90f5-a39fd619e378"}},
    "staticQueryHashes": ["1122327541","1339625561","148928582","2140385554","3442269102","4275725850"]}