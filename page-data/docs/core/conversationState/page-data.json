{"componentChunkName":"component---node-modules-smooth-doc-src-templates-doc-js","path":"/docs/core/conversationState/","result":{"data":{"mdx":{"fields":{"pageType":"doc","title":"Conversation State","editLink":""},"body":"var _excluded = [\"components\"];\n\nfunction _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar _frontmatter = {\n  \"title\": \"Conversation State\",\n  \"section\": \"UNDERSTANDING THE CORE\",\n  \"order\": 4\n};\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"h1\", {\n    \"id\": \"working-with-conversation-state\"\n  }, mdx(\"a\", {\n    parentName: \"h1\",\n    \"href\": \"#working-with-conversation-state\",\n    \"aria-hidden\": true,\n    \"className\": \"anchor\"\n  }, mdx(\"svg\", {\n    \"aria-hidden\": \"true\",\n    height: \"1em\",\n    width: \"1em\",\n    viewBox: \"0 0 16 16\"\n  }, mdx(\"path\", {\n    fillRule: \"evenodd\",\n    d: \"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\n  }))), \"Working with conversation state\"), mdx(\"p\", null, \"Stateless conversation is annoying. Noone wants to repeat, what was said. So \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"each user has own state object\"), \".\"), mdx(\"h2\", {\n    \"id\": \"using-the-state-in-navigation\"\n  }, mdx(\"a\", {\n    parentName: \"h2\",\n    \"href\": \"#using-the-state-in-navigation\",\n    \"aria-hidden\": true,\n    \"className\": \"anchor\"\n  }, mdx(\"svg\", {\n    \"aria-hidden\": \"true\",\n    height: \"1em\",\n    width: \"1em\",\n    viewBox: \"0 0 16 16\"\n  }, mdx(\"path\", {\n    fillRule: \"evenodd\",\n    d: \"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\n  }))), \"Using the state in navigation\"), mdx(\"p\", null, \"Request object contains \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \".state\"), \" attribute, which represents state before the event, Responder updates new state with \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"Object.assign()\"), \" approach.\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-javascript\"\n  }, \"const { Router } = require('wingbot');\\nconst bot = new Router();\\n\\nbot.use('/rename', (req, res) => {\\n    res.text('So, how will you call me?')\\n        .expected('setName');\\n});\\n\\nbot.use('/setName', (req, res) => {\\n    const name = req.text();\\n\\n    res.text(`Now, I'am ${name}.`)\\n        .setState({ name });\\n});\\n\\nbot.use((req, res) => {\\n    const { name } = req.state;\\n    if (name) {\\n        res.text(`Call me ${name}, ok?`, {\\n            rename: 'It\\\\'s not ok'\\n        });\\n    } else {\\n        res.text('I have no name, give me one!')\\n            .expected('setName');\\n    }\\n});\\n\\nmodule.exports = bot;\\n\")), mdx(\"p\", null, \"This example makes conversation flow like this:\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\"\n  }, \"*-----------------------------------*\\n|                             Hello |\\n| I have no name, give me one!      |\\n|                                   |\\n|                            Albert |\\n| Now, I'am Albert.                 |\\n|                                   |\\n|                             Hello |\\n| Call me Albert, ok?               |\\n|                                   |\\n|                       It's not ok |\\n| So, how will you call me?         |\\n|                                   |\\n|                            Alfred |\\n| Now, I'am Alfred.                 |\\n*-----------------------------------*\\n\")), mdx(\"h2\", {\n    \"id\": \"reading-and-modifiing-user-state\"\n  }, mdx(\"a\", {\n    parentName: \"h2\",\n    \"href\": \"#reading-and-modifiing-user-state\",\n    \"aria-hidden\": true,\n    \"className\": \"anchor\"\n  }, mdx(\"svg\", {\n    \"aria-hidden\": \"true\",\n    height: \"1em\",\n    width: \"1em\",\n    viewBox: \"0 0 16 16\"\n  }, mdx(\"path\", {\n    fillRule: \"evenodd\",\n    d: \"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\n  }))), \"Reading and modifiing user state\"), mdx(\"p\", null, \"It's good to know, that request state is not modified, when \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"res.setState()\"), \" is called. It will be modified after dispatching process.\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-javascript\"\n  }, \"const { Router } = require('wingbot');\\nconst bot = new Router();\\n\\nbot.use((req, res) => {\\n    // let's give two options to user\\n    if (req.state.odd) {\\n        res.setState({ odd: false });\\n        // still req.state.odd === true\\n        this.text('Odd');\\n    } else {\\n        res.setState({ odd: true });\\n        // still req.state.odd === false || req.state.odd === undefined\\n        this.text('Even');\\n    }\\n});\\n\\nmodule.exports = bot;\\n\")), mdx(\"blockquote\", null, mdx(\"p\", {\n    parentName: \"blockquote\"\n  }, \"It's better to avoid using \\\"default state\\\", because when you need to change default state in future updates,\\nyou should also migrate current users states to new structure.\")), mdx(\"h2\", {\n    \"id\": \"default-state-properties\"\n  }, mdx(\"a\", {\n    parentName: \"h2\",\n    \"href\": \"#default-state-properties\",\n    \"aria-hidden\": true,\n    \"className\": \"anchor\"\n  }, mdx(\"svg\", {\n    \"aria-hidden\": \"true\",\n    height: \"1em\",\n    width: \"1em\",\n    viewBox: \"0 0 16 16\"\n  }, mdx(\"path\", {\n    fillRule: \"evenodd\",\n    d: \"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\n  }))), \"Default state properties\"), mdx(\"table\", null, mdx(\"thead\", {\n    parentName: \"table\"\n  }, mdx(\"tr\", {\n    parentName: \"thead\"\n  }, mdx(\"th\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"property\"), mdx(\"th\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"meaning\"))), mdx(\"tbody\", {\n    parentName: \"table\"\n  }, mdx(\"tr\", {\n    parentName: \"tbody\"\n  }, mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, mdx(\"inlineCode\", {\n    parentName: \"td\"\n  }, \"lastAction\")), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"last action the user visited\")), mdx(\"tr\", {\n    parentName: \"tbody\"\n  }, mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, mdx(\"inlineCode\", {\n    parentName: \"td\"\n  }, \"lastInteraction\")), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"last action excluding \\\"expected actions\\\"\")), mdx(\"tr\", {\n    parentName: \"tbody\"\n  }, mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, mdx(\"inlineCode\", {\n    parentName: \"td\"\n  }, \"beforeLastInteraction\")), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"previous vaule of \", mdx(\"inlineCode\", {\n    parentName: \"td\"\n  }, \"lastInteraction\"))))), mdx(\"blockquote\", null, mdx(\"p\", {\n    parentName: \"blockquote\"\n  }, mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"beforeLastInteraction\"), \" is useful property, which makes bot able to go back to the last interaction using \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"postBack(req.state.beforeLastInteraction)\"))));\n}\n;\nMDXContent.isMDXComponent = true;","tableOfContents":{"items":[{"url":"#working-with-conversation-state","title":"Working with conversation state","items":[{"url":"#using-the-state-in-navigation","title":"Using the state in navigation"},{"url":"#reading-and-modifiing-user-state","title":"Reading and modifiing user state"},{"url":"#default-state-properties","title":"Default state properties"}]}]}}},"pageContext":{"id":"415dc717-1d29-5dea-95c1-bcd12d86e95c"}},"staticQueryHashes":["1122327541","1339625561","148928582","2140385554","3442269102","4275725850"]}