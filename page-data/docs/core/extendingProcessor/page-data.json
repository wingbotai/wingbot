{"componentChunkName":"component---node-modules-smooth-doc-src-templates-doc-js","path":"/docs/core/extendingProcessor/","result":{"data":{"mdx":{"fields":{"pageType":"doc","title":"Extending the wingbot's abilities using Processor plugin","editLink":""},"body":"var _excluded = [\"components\"];\n\nfunction _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar _frontmatter = {\n  \"title\": \"Extending the wingbot's abilities using Processor plugin\",\n  \"section\": \"UNDERSTANDING THE CORE\",\n  \"order\": 9\n};\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"h1\", {\n    \"id\": \"extending-the-wingbots-abilities-using-processor-plugin\"\n  }, mdx(\"a\", {\n    parentName: \"h1\",\n    \"href\": \"#extending-the-wingbots-abilities-using-processor-plugin\",\n    \"aria-hidden\": true,\n    \"className\": \"anchor\"\n  }, mdx(\"svg\", {\n    \"aria-hidden\": \"true\",\n    height: \"1em\",\n    width: \"1em\",\n    viewBox: \"0 0 16 16\"\n  }, mdx(\"path\", {\n    fillRule: \"evenodd\",\n    d: \"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\n  }))), \"Extending the wingbot's abilities using Processor plugin\"), mdx(\"p\", null, \"To be able to:\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"add methods to \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"Request\"), \" or \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"Responder\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"modify state before save\")), mdx(\"p\", null, \"you can use a Processor plugin\"), mdx(\"h2\", {\n    \"id\": \"processor-plugin\"\n  }, mdx(\"a\", {\n    parentName: \"h2\",\n    \"href\": \"#processor-plugin\",\n    \"aria-hidden\": true,\n    \"className\": \"anchor\"\n  }, mdx(\"svg\", {\n    \"aria-hidden\": \"true\",\n    height: \"1em\",\n    width: \"1em\",\n    viewBox: \"0 0 16 16\"\n  }, mdx(\"path\", {\n    fillRule: \"evenodd\",\n    d: \"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\n  }))), \"Processor plugin\"), mdx(\"p\", null, \"Processor plugin has following interface and \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"all functions can be async or not.\")), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"p\", {\n    parentName: \"li\"\n  }, mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"#processMessage(message, pageId, messageSender)\")), mdx(\"p\", {\n    parentName: \"li\"\n  }, \"  Called immediately after the messaging event arrives to Processor. Has following signature:\"), mdx(\"ul\", {\n    parentName: \"li\"\n  }, mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"message: object\"), \" - the messaging event object\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"pageId: string\"), \" - id of page (channel), where the event occured\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"messageSender: Sender\"), \" - an instance of Sender class, which allows to send responses\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"strong\", {\n    parentName: \"li\"\n  }, \"returns:\"), \" \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"{status:number}\"), \" - status 200 will stop the dispatching and will be returned\"))), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"p\", {\n    parentName: \"li\"\n  }, mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"#beforeAiPreload(req, res): boolean\")), mdx(\"p\", {\n    parentName: \"li\"\n  }, \"  Called immediately after loading the state and before the intent or entities are attached and also before the \\\"setState\\\" from quick replies is processed.\"), mdx(\"p\", {\n    parentName: \"li\"\n  }, \"  Returning \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"false\"), \" stops the dispatching.\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"p\", {\n    parentName: \"li\"\n  }, mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"#beforeProcessMessage(req, res): boolean\")), mdx(\"p\", {\n    parentName: \"li\"\n  }, \"  Called just before passing a message through bot.\"), mdx(\"p\", {\n    parentName: \"li\"\n  }, \"  Returning \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"false\"), \" stops the dispatching.\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"p\", {\n    parentName: \"li\"\n  }, mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"#afterProcessMessage(req, res)\")), mdx(\"p\", {\n    parentName: \"li\"\n  }, \"  Called after the bot completes dispatching an event. Allows to modify state before it'll be stored.\"))), mdx(\"h2\", {\n    \"id\": \"using-the-plugin\"\n  }, mdx(\"a\", {\n    parentName: \"h2\",\n    \"href\": \"#using-the-plugin\",\n    \"aria-hidden\": true,\n    \"className\": \"anchor\"\n  }, mdx(\"svg\", {\n    \"aria-hidden\": \"true\",\n    height: \"1em\",\n    width: \"1em\",\n    viewBox: \"0 0 16 16\"\n  }, mdx(\"path\", {\n    fillRule: \"evenodd\",\n    d: \"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\n  }))), \"Using the plugin\"), mdx(\"p\", null, \"This example shows how to implement own state property and it's setter, so the data will be persisted.\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-javascript\"\n  }, \"\\nclass MySpecialStatePlugin {\\n\\n    beforeProcessMessage (req, res) {\\n        Object.assign(req, {\\n            mySpecialState: req.state._mySpecState\\n        });\\n        Object.assign(res, {\\n            _updateMySpecialState: {},\\n            setMySpecialState (data) {\\n                Object.assign(this._updateMySpecialState, data);\\n            }\\n        });\\n        return true;\\n    }\\n\\n    afterProcessMessage (req, res) {\\n        res.setState({\\n            _mySpecState: {\\n                ...req.mySpecialState,\\n                ...res._updateMySpecialState\\n            }\\n        });\\n    }\\n\\n}\\n\\n// using the plugin\\nconst bot = new Router();\\n\\nbot.use('start', (req, res) => {\\n    res.setMySpecialState({ visitedStart: true });\\n});\\n\\n// register the plugin in processor\\nconst processor = new Processor(bot);\\n\\nprocessor.plugin(new MySpecialStatePlugin());\\n\")));\n}\n;\nMDXContent.isMDXComponent = true;","tableOfContents":{"items":[{"url":"#extending-the-wingbots-abilities-using-processor-plugin","title":"Extending the wingbot's abilities using Processor plugin","items":[{"url":"#processor-plugin","title":"Processor plugin"},{"url":"#using-the-plugin","title":"Using the plugin"}]}]}}},"pageContext":{"id":"3bcd471b-57a9-513c-8470-b7d95b238224"}},"staticQueryHashes":["1122327541","1339625561","148928582","2140385554","3442269102","4275725850"]}