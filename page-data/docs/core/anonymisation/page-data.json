{"componentChunkName":"component---node-modules-smooth-doc-src-templates-doc-js","path":"/docs/core/anonymisation/","result":{"data":{"mdx":{"fields":{"pageType":"doc","title":"Anonymisation","editLink":""},"body":"var _excluded = [\"components\"];\n\nfunction _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar _frontmatter = {\n  \"title\": \"Anonymisation\",\n  \"section\": \"UNDERSTANDING THE CORE\",\n  \"order\": 11\n};\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"h1\", {\n    \"id\": \"anonymisation\"\n  }, mdx(\"a\", {\n    parentName: \"h1\",\n    \"href\": \"#anonymisation\",\n    \"aria-hidden\": true,\n    \"className\": \"anchor\"\n  }, mdx(\"svg\", {\n    \"aria-hidden\": \"true\",\n    height: \"1em\",\n    width: \"1em\",\n    viewBox: \"0 0 16 16\"\n  }, mdx(\"path\", {\n    fillRule: \"evenodd\",\n    d: \"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\n  }))), \"Anonymisation\"), mdx(\"p\", null, \"There a three tiers of anonymisation\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"strong\", {\n    parentName: \"li\"\n  }, \"pattern anonymisation\"), \" (enabled by default)\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"strong\", {\n    parentName: \"li\"\n  }, \"expected input anonymisation\"), \" (when bot asks for something sensitive)\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"strong\", {\n    parentName: \"li\"\n  }, \"confident inputs (passwords)\"))), mdx(\"h2\", {\n    \"id\": \"pattern-anonymisation\"\n  }, mdx(\"a\", {\n    parentName: \"h2\",\n    \"href\": \"#pattern-anonymisation\",\n    \"aria-hidden\": true,\n    \"className\": \"anchor\"\n  }, mdx(\"svg\", {\n    \"aria-hidden\": \"true\",\n    height: \"1em\",\n    width: \"1em\",\n    viewBox: \"0 0 16 16\"\n  }, mdx(\"path\", {\n    fillRule: \"evenodd\",\n    d: \"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\n  }))), \"Pattern anonymisation\"), mdx(\"p\", null, mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"Every\"), \" user input is anonymized with a pattern replacement.\"), mdx(\"p\", null, \"Every chatbot built with \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"wingbot-cli\"), \" has a file (\", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"bot/anonymize.js\"), \") with predefined regular expressions:\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"@EMAIL\"), \" - email addresses\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"@PHONE\"), \" - phone numbers\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"@CODE\"), \" - alphanumeric codes (numbers combined with letters)\")), mdx(\"p\", null, \"All these patters are used when storing:\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"strong\", {\n    parentName: \"li\"\n  }, \"conversation history\"), \" (\", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"textFilter\"), \" option at \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"BotApp\"), \" class)\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"strong\", {\n    parentName: \"li\"\n  }, \"reporting\"), mdx(\"ul\", {\n    parentName: \"li\"\n  }, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Google Analytics (\", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"onAction.js\"), \")\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Table Storage\")))), mdx(\"blockquote\", null, mdx(\"p\", {\n    parentName: \"blockquote\"\n  }, \"If it's necessary, it's possible to disable the pattern anonymisation, but it's not recommended.\"), mdx(\"h2\", {\n    parentName: \"blockquote\",\n    \"id\": \"expected-input-anonymisation\"\n  }, mdx(\"a\", {\n    parentName: \"h2\",\n    \"href\": \"#expected-input-anonymisation\",\n    \"aria-hidden\": true,\n    \"className\": \"anchor\"\n  }, mdx(\"svg\", {\n    \"aria-hidden\": \"true\",\n    height: \"1em\",\n    width: \"1em\",\n    viewBox: \"0 0 16 16\"\n  }, mdx(\"path\", {\n    fillRule: \"evenodd\",\n    d: \"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\n  }))), \"Expected input anonymisation\")), mdx(\"p\", null, \"It's possible to anonymize a user input, which follows after an interaction\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"disables the NLP on user input\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"replaces text content of incoming request before\\nstoring it at ChatLogStorage using a \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"confidentInputFilter\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"req.isConfidentInput()\"), \" will return true\")), mdx(\"p\", null, \"After processing the user input, next requests will be processed as usual,\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-javascript\"\n  }, \"const { Router } = require('wingbot');\\nconst bot = new Router();\\nbot.use('start', (req, res) => {\\n    // evil question\\n    res.text('Give me your CARD NUMBER :D')\\n        .expected('received-card-number')\\n        .expectedConfidentInput();\\n});\\nbot.use('received-card-number', (req, res) => {\\n    const cardNumber = req.text();\\n    // raw card number\\n    req.isConfidentInput(); // true\\n    res.text('got it')\\n        .setState({ cardNumber });\\n\")), mdx(\"h2\", {\n    \"id\": \"confidential-inputs-password\"\n  }, mdx(\"a\", {\n    parentName: \"h2\",\n    \"href\": \"#confidential-inputs-password\",\n    \"aria-hidden\": true,\n    \"className\": \"anchor\"\n  }, mdx(\"svg\", {\n    \"aria-hidden\": \"true\",\n    height: \"1em\",\n    width: \"1em\",\n    viewBox: \"0 0 16 16\"\n  }, mdx(\"path\", {\n    fillRule: \"evenodd\",\n    d: \"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\n  }))), \"Confidential inputs (password)\"), mdx(\"p\", null, \"When using the chatbot with the Wingbot's web chat, it's possible to use a special input type, which \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"hides inserted content immediately after it is submitted\")), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-javascript\"\n  }, \"res.expectedInput(res.ExpectedInputTypes.TYPE_PASSWORD);\\n\")));\n}\n;\nMDXContent.isMDXComponent = true;","tableOfContents":{"items":[{"url":"#anonymisation","title":"Anonymisation","items":[{"url":"#pattern-anonymisation","title":"Pattern anonymisation"},{"url":"#confidential-inputs-password","title":"Confidential inputs (password)"}]}]}}},"pageContext":{"id":"955dce65-b298-5575-8228-ce6510e62a73"}},"staticQueryHashes":["1122327541","1339625561","148928582","2140385554","3442269102","4275725850"]}