{"componentChunkName":"component---node-modules-smooth-doc-src-templates-doc-js","path":"/docs/designer/chatbotApi/","result":{"data":{"mdx":{"fields":{"pageType":"doc","title":"Chatbot API","editLink":""},"body":"var _excluded = [\"components\"];\n\nfunction _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar _frontmatter = {\n  \"title\": \"Chatbot API\",\n  \"section\": \"BUILDING A CHATBOT WITH DESIGNER\",\n  \"order\": 7\n};\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"h1\", {\n    \"id\": \"chatbot-api\"\n  }, mdx(\"a\", {\n    parentName: \"h1\",\n    \"href\": \"#chatbot-api\",\n    \"aria-hidden\": true,\n    \"className\": \"anchor\"\n  }, mdx(\"svg\", {\n    \"aria-hidden\": \"true\",\n    height: \"16\",\n    version: \"1.1\",\n    viewBox: \"0 0 16 16\",\n    width: \"16\"\n  }, mdx(\"path\", {\n    fillRule: \"evenodd\",\n    d: \"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\n  }))), \"Chatbot API\"), mdx(\"p\", null, \"You can communicate with your chatbot through its \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"GraphQL API\"), \". These basic tasks can be done by API:\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"sending messages (with \", mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"../api/GraphApi.md#postBackApi\"\n  }, \"postBackApi()\"), \")\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"validating a conversation data (with \", mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"../api/GraphApi.md#validateBotApi\"\n  }, \"validateBotApi()\"), \")\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"managing campaigns and querying target audience (with \", mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"../api/Notifications.md#Notifications_api\"\n  }, \"Notifications#api()\"), \")\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"or updating a conversation data\")), mdx(\"h2\", {\n    \"id\": \"sending-a-request-to-the-chatbot-postback\"\n  }, mdx(\"a\", {\n    parentName: \"h2\",\n    \"href\": \"#sending-a-request-to-the-chatbot-postback\",\n    \"aria-hidden\": true,\n    \"className\": \"anchor\"\n  }, mdx(\"svg\", {\n    \"aria-hidden\": \"true\",\n    height: \"16\",\n    version: \"1.1\",\n    viewBox: \"0 0 16 16\",\n    width: \"16\"\n  }, mdx(\"path\", {\n    fillRule: \"evenodd\",\n    d: \"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\n  }))), \"Sending a request to the chatbot (postback)\"), mdx(\"p\", null, \"This example illustrates, how to send a request with CURL\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\"\n  }, \"curl -X POST https://yourbot.com/api \\\\\\n  -H \\\"Authorization: <custom static token for other applications>\\\" \\\\\\n  -H \\\"Content-Type: application/json; charset=utf-8\\\" \\\\\\n  -d @- << EOF\\n\\n{\\n    \\\"variables\\\": {\\n        \\\"pageId\\\":\\\"webchat\\\",\\n        \\\"senderId\\\":\\\"id-of-user\\\",\\n        \\\"action\\\": \\\"action-path\\\"\\n    },\\n    \\\"query\\\":\\\"mutation SendPostBack ($pageId:String!,$senderId:String!,$action:String!,$data:Any) { postBack (pageId:$pageId,senderId:$senderId,action:$action,data:$data) { status } }\\\"\\n}\\nEOF\\n\")), mdx(\"p\", null, \"Or with plain javascript\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-javascript\"\n  }, \"const request = new XMLHttpRequest();\\n\\nrequest.open('POST', 'https://my-bot.com/api', true);\\n\\nrequest.setRequestHeader('Content-Type', 'application/json; charset=utf-8');\\nrequest.setRequestHeader('Authorization', '<custom static token for other applications>');\\n\\nrequest.onload = () => {\\n    let err = null;\\n    if (request.status >= 200 && request.status < 400) {\\n        const res = JSON.parse(request.response);\\n        if (res.data && (!res.errors || res.errors.length === 0)) {\\n            // success\\n        } else {\\n            err = res.errors && res.errors[0];\\n            // graphql error\\n        }\\n    } else {\\n        // error status\\n    }\\n};\\n\\nrequest.onerror = () => {\\n    // request failed\\n};\\n\\nrequest.send(JSON.stringify({\\n    query: `mutation SendPostBack (\\n        $pageId:String!,\\n        $senderId:String!,\\n        $action:String!,\\n        $data:Any\\n    ) {\\n        postBack (\\n            pageId:$pageId,\\n            senderId:$senderId,\\n            action:$action,\\n            data:$data\\n        ) {\\n            status\\n        }\\n    }`,\\n    variables: {\\n        pageId: 'webchat',\\n        senderId: 'id-of-user',\\n        action: 'action-path'\\n    }\\n}));\\n\")), mdx(\"h2\", {\n    \"id\": \"setting-up-the-api\"\n  }, mdx(\"a\", {\n    parentName: \"h2\",\n    \"href\": \"#setting-up-the-api\",\n    \"aria-hidden\": true,\n    \"className\": \"anchor\"\n  }, mdx(\"svg\", {\n    \"aria-hidden\": \"true\",\n    height: \"16\",\n    version: \"1.1\",\n    viewBox: \"0 0 16 16\",\n    width: \"16\"\n  }, mdx(\"path\", {\n    fillRule: \"evenodd\",\n    d: \"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\n  }))), \"Setting up the API\"), mdx(\"p\", null, \"Each chatbot should have the \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"/api\"), \" endpoint, which listens to the\\n\", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"GraphQL requests\"), \" authorized with \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"JWT token\"), \" or \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"Static token\"), \".\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-javascript\"\n  }, \"const { GraphApi, validateBotApi, postBackApi } = require('wingbot');\\nconst espress = require('express');\\nconst channel = require('./instance-of-facebook-or-botservice');\\nconst botFactory = require('./function-which-returns-instance-of-router');\\n\\nconst app = express();\\n\\n// attach API's\\nconst api = new GraphApi([\\n    postBackApi(channel),\\n    validateBotApi(botFactory, 'start', 'foobar')\\n], {\\n    token: '<wingbot token>',\\n    appToken: '<custom static token for other applications>'\\n});\\n\\napp.post(\\n    '/api',\\n    express.json(),\\n    (req, res, next) => {\\n        const { body } = req;\\n        api.request(body, req.headers)\\n            .then((response) => {\\n                res.set({\\n                    'Content-Type': 'application/json'\\n                })\\n                    .send(response);\\n            })\\n            .catch(next);\\n    })\\n);\\n\")));\n}\n;\nMDXContent.isMDXComponent = true;","tableOfContents":{"items":[{"url":"#chatbot-api","title":"Chatbot API","items":[{"url":"#sending-a-request-to-the-chatbot-postback","title":"Sending a request to the chatbot (postback)"},{"url":"#setting-up-the-api","title":"Setting up the API"}]}]}}},"pageContext":{"id":"1f1a2a5a-211b-5867-b305-26ed5ab39cd7"}},"staticQueryHashes":["1022386572","1122327541","1339625561","2140385554","3442269102","3597609067"]}